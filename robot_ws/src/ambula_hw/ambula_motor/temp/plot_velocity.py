#!/usr/bin/env python3
import odrive
from odrive.enums import AxisState, ControlMode
import time
import matplotlib.pyplot as plt

def main():
    print("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ODrive ...")
    odrv0 = odrive.find_any(timeout=10)
    if odrv0 is None:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ODrive")
        return

    axis = odrv0.axis0

    # ===== Set Closed-loop Velocity Control =====
    print("‚öôÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ã‡πá‡∏ï closed-loop velocity control...")
    axis.requested_state = AxisState.CLOSED_LOOP_CONTROL
    axis.controller.config.control_mode = ControlMode.VELOCITY_CONTROL

    # ===== ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ß‡∏¥‡πà‡∏á =====
    target_vel = 10.0   # turn/s (1 ‡∏£‡∏≠‡∏ö = 360¬∞)
    print(f"üöÄ ‡∏ß‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà {target_vel} turn/s")
    axis.controller.input_vel = target_vel

    # ===== ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß =====
    times = []
    velocities = []
    t0 = time.time()
    duration = 5.0   # ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    dt = 0.01

    while (time.time() - t0) < duration:
        vel = axis.encoder.vel_estimate
        t = time.time() - t0
        times.append(t)
        velocities.append(vel)
        time.sleep(dt)

    # ===== ‡∏´‡∏¢‡∏∏‡∏î‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå =====
    print("üõë ‡∏´‡∏¢‡∏∏‡∏î‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå")
    axis.controller.input_vel = 0.0

    # ===== Plot =====
    plt.figure()
    plt.plot(times, velocities, label="Measured Velocity [turn/s]")
    plt.axhline(target_vel, color="red", linestyle="--", label="Target Velocity")
    plt.xlabel("Time [s]")
    plt.ylabel("Velocity [turn/s]")
    plt.title("ODrive Axis0 Velocity Tracking")
    plt.legend()
    plt.grid(True)
    plt.show()

if __name__ == "__main__":
    main()
